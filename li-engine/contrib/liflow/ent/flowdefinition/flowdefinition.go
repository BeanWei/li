// Code generated by entc, DO NOT EDIT.

package flowdefinition

const (
	// Label holds the string label denoting the flowdefinition type in the database.
	Label = "flow_definition"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldModel holds the string denoting the model field in the database.
	FieldModel = "model"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// EdgeFlowDeployments holds the string denoting the flow_deployments edge name in mutations.
	EdgeFlowDeployments = "flow_deployments"
	// Table holds the table name of the flowdefinition in the database.
	Table = "flow_definitions"
	// FlowDeploymentsTable is the table that holds the flow_deployments relation/edge.
	FlowDeploymentsTable = "flow_deployments"
	// FlowDeploymentsInverseTable is the table name for the FlowDeployment entity.
	// It exists in this package in order to avoid circular dependency with the "flowdeployment" package.
	FlowDeploymentsInverseTable = "flow_deployments"
	// FlowDeploymentsColumn is the table column denoting the flow_deployments relation/edge.
	FlowDeploymentsColumn = "flow_definition_id"
)

// Columns holds all SQL columns for flowdefinition fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldStatus,
	FieldModel,
	FieldRemark,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() int64
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() int64
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() int64
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt int64
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
	// DefaultRemark holds the default value on creation for the "remark" field.
	DefaultRemark string
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
